{"version":3,"sources":["context/Context.js","pages/uploader/Uploader.js","components/Tabs/Tabs.js","components/Notifications/Notifications.js","utils/utils.js","pages/converter/Converter.js","components/Dropper/Dropper.js","components/ThemeSwitcher/ThemeSwitcher.js","pages/main/Main.js","index.js"],"names":["ImgContext","createContext","ImgProvider","children","useState","img","setImg","Provider","value","Uploader","useContext","uploading","setUploading","converting","setConverting","isSupported","type","includes","getFile","files","length","file","getImg","reader","FileReader","readAsDataURL","onload","evt","Image","src","target","result","handlePaste","data","clipboardData","window","text","getData","fetch","then","res","blob","_","File","Math","ceil","random","lastModified","Date","getTime","useEffect","document","addEventListener","removeEventListener","onChange","currentTarget","className","id","accept","htmlFor","TabsContext","activeItem","setActiveItem","Tabs","props","Item","item","ItemIndicator","role","onClick","callback","tooltip","NotificationsContext","Notifications","useReducer","state","action","payload","filter","el","dispatchNotification","map","notification","close","setClose","progress","setProgress","intervalId","setIntervalId","handleStartTimer","setInterval","prev","clearInterval","handlePauseTimer","handleClose","setTimeout","onMouseEnter","onMouseLeave","message","xmlns","viewBox","fill","fillRule","d","clipRule","style","width","getFilter","method","r","g","b","i","methods","algorithm","getSymbol","alphabet","filtered","getBrailleSymbol","dots","number","octets","forEach","index","String","fromCharCode","toString","parseInt","getPixels","height","canvas","createElement","ctx","getContext","drawImage","getImageData","name","max","min","modes","params","imgWidth","imgHeight","cellSize","optimizeA","optimizeRGB","y","x","pos","j","Converter","resulter","useRef","uploader","setResult","mode","setParams","getConversion","current","click","navigator","clipboard","writeText","v4","a","Blob","href","URL","createObjectURL","download","revokeObjectURL","minLength","fontFamily","readOnly","ref","Dropper","draggingCounter","dragging","setDragging","handlePropagation","preventDefault","stopPropagation","handleDrag","handleDragIn","dataTransfer","items","handleDragOut","handleDrop","stroke","strokeLinecap","strokeLinejoin","strokeWidth","ThemeSwitcher","theme","setTheme","localStorage","matchMedia","matches","documentElement","classList","add","remove","Main","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7d5a2294.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nconst ImgContext = createContext();\r\n\r\nexport { ImgContext };\r\n\r\nexport const ImgProvider = ({ children }) => {\r\n  const [img, setImg] = useState(null);\r\n\r\n  return (\r\n    <ImgContext.Provider value={{ img, setImg }}>\r\n      {children}\r\n    </ImgContext.Provider>\r\n  );\r\n};\r\n","import React, { useEffect, useState, useContext } from 'react';\r\n\r\nimport { ImgContext } from '../../context/Context';\r\n\r\nconst Uploader = () => {\r\n  const { setImg } = useContext(ImgContext);\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n  const [converting, setConverting] = useState(false);\r\n\r\n  const isSupported = (type) => {\r\n    const supported = ['image/jpeg', 'image/jpg', 'image/png'];\r\n\r\n    return supported.includes(type);\r\n  };\r\n\r\n  const getFile = (files) => {\r\n    if (files.length) {\r\n      const file = files[0];\r\n\r\n      if (isSupported(file.type)) {\r\n        return file;\r\n      }\r\n    }\r\n  };\r\n\r\n  const getImg = (file) => {\r\n    if (uploading || converting || !file) {\r\n      return;\r\n    }\r\n\r\n    setConverting(true);\r\n\r\n    const reader = new FileReader();\r\n\r\n    reader.readAsDataURL(file);\r\n\r\n    reader.onload = (evt) => {\r\n      const img = new Image();\r\n\r\n      img.src = evt.target.result;\r\n\r\n      img.onload = () => {\r\n        setConverting(false);\r\n        setImg(img);\r\n      };\r\n    };\r\n  };\r\n\r\n  const handlePaste = (evt) => {\r\n    if (uploading || converting) {\r\n      return;\r\n    }\r\n\r\n    setUploading(true);\r\n\r\n    const data = evt.clipboardData || window.clipboardData;\r\n\r\n    const files = data.files;\r\n    const file = getFile(files);\r\n\r\n    setUploading(false);\r\n\r\n    if (file) {\r\n      getImg(file);\r\n      return;\r\n    }\r\n\r\n    const text = data.getData('text');\r\n\r\n    if (text) {\r\n      fetch(text)\r\n        .then(\r\n          (res) => res.blob(),\r\n          (_) => {\r\n            setUploading(false);\r\n          }\r\n        )\r\n        .then(\r\n          (blob) => {\r\n            if (blob && blob.type && isSupported(blob.type)) {\r\n              const file = new File([blob], `${Math.ceil(Math.random())}`, {\r\n                lastModified: new Date().getTime(),\r\n                type: blob.type\r\n              });\r\n\r\n              setUploading(false);\r\n\r\n              if (file) {\r\n                getImg(file);\r\n              }\r\n            }\r\n\r\n            return;\r\n          },\r\n          (_) => {\r\n            setUploading(false);\r\n          }\r\n        );\r\n    }\r\n  };\r\n\r\n  const handleChange = (evt) => {\r\n    if (uploading || converting) {\r\n      return;\r\n    }\r\n\r\n    setUploading(true);\r\n\r\n    const files = evt.currentTarget.files;\r\n    const file = getFile(files);\r\n\r\n    setUploading(false);\r\n\r\n    if (file) {\r\n      getImg(file);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('paste', handlePaste);\r\n\r\n    return () => {\r\n      document.removeEventListener('paste', handlePaste);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <form>\r\n      <input\r\n        onChange={handleChange}\r\n        className='sr-only'\r\n        id='upload'\r\n        type='file'\r\n        accept='.jpg, .jpeg, .png'\r\n      />\r\n      <label\r\n        className='fixed w-screen h-screen cursor-pointer grid place-content-center p-6 group '\r\n        htmlFor='upload'\r\n      >\r\n        <div className='flex justify-center p-6 rounded-md shadow-lg max-w-xl transition-all group-hover:scale-105 dark:text-white'>\r\n          <div className='space-y-1 text-center'>\r\n            <p>\r\n              <span className='text-purple-500'>Выберите изображение</span> или\r\n              перетащите его или вставьте ссылку на изображение или же вставьте\r\n              само изображение из буфера обмена\r\n            </p>\r\n            <p className='text-xs text-gray-500'>\r\n              Поддерживаемые форматы изображений: .jpg, .jpeg, .png\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Uploader;\r\n","import React, { useState, createContext, useContext } from 'react';\r\n\r\nconst TabsContext = createContext({\r\n  activeItem: null,\r\n  setActiveItem: null\r\n});\r\n\r\nconst Tabs = (props) => {\r\n  const [activeItem, setActiveItem] = useState(null);\r\n\r\n  return (\r\n    <TabsContext.Provider value={{ activeItem, setActiveItem }}>\r\n      <div className={`tabs ${props.className}`}>{props.children}</div>\r\n    </TabsContext.Provider>\r\n  );\r\n};\r\n\r\nconst Item = (props) => {\r\n  const { activeItem } = useContext(TabsContext);\r\n\r\n  return (\r\n    <div\r\n      className={`tabs__item ${\r\n        props.item === activeItem ? 'tabs__item_active' : ''\r\n      } ${props.className}`}\r\n    >\r\n      <div className='tabs__item-content'>{props.children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ItemIndicator = (props) => {\r\n  const { activeItem, setActiveItem } = useContext(TabsContext);\r\n\r\n  const handleClick = () => {\r\n    if (props.item) {\r\n      setActiveItem(props.item);\r\n    }\r\n\r\n    if (props.callback) {\r\n      props.callback();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        type='button'\r\n        role='tab'\r\n        aria-selected={props.item === activeItem}\r\n        className={`tabs__item-indicator ${props.className} ${\r\n          props.item === activeItem ? 'tabs__item-indicator_active' : ''\r\n        } tooltip-initiator`}\r\n        onClick={handleClick}\r\n      >\r\n        {props.children}\r\n      </button>\r\n      <span\r\n        className='\r\n              tooltip\r\n            bg-black\r\n              absolute\r\n              left-full\r\n              top-0\r\n              p-2\r\n              shadow-lg\r\n              flex\r\n              rounded-md\r\n              text-white\r\n              whitespace-nowrap\r\n              font-medium\r\n              text-xs'\r\n      >\r\n        {props.tooltip}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nTabs.Item = Item;\r\nTabs.ItemIndicator = ItemIndicator;\r\n\r\nexport default Tabs;\r\n","import React, { useState, useEffect, createContext, useReducer } from 'react';\r\n\r\nconst NotificationsContext = createContext();\r\n\r\nconst Notifications = (props) => {\r\n  const [state, dispatchNotification] = useReducer((state, action) => {\r\n    switch (action.type) {\r\n      case 'ADD_NOTIFICATION':\r\n        return [...state, { ...action.payload }];\r\n      case 'REMOVE_NOTIFICATION':\r\n        return state.filter((el) => el.id !== action.id);\r\n      default:\r\n        return state;\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <NotificationsContext.Provider value={dispatchNotification}>\r\n      {props.children}\r\n      <div className='grid gap-2 justify-items-center fixed bottom-3 left-1/2 -translate-x-1/2 z-[500]'>\r\n        {state.map((notification) => (\r\n          <Notifications.Item\r\n            dispatchNotification={dispatchNotification}\r\n            key={notification.id}\r\n            {...notification}\r\n          />\r\n        ))}\r\n      </div>\r\n    </NotificationsContext.Provider>\r\n  );\r\n};\r\n\r\nconst Notification = (props) => {\r\n  const [close, setClose] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [intervalId, setIntervalId] = useState(null);\r\n\r\n  const handleStartTimer = () => {\r\n    const id = setInterval(() => {\r\n      setProgress((prev) => {\r\n        if (prev < 100) {\r\n          return prev + 0.5;\r\n        }\r\n\r\n        clearInterval(id);\r\n        return prev;\r\n      });\r\n    }, 20);\r\n\r\n    setIntervalId(id);\r\n  };\r\n\r\n  const handlePauseTimer = () => {\r\n    clearInterval(intervalId);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    handlePauseTimer();\r\n    setClose(true);\r\n    setTimeout(() => {\r\n      props.dispatchNotification({\r\n        type: 'REMOVE_NOTIFICATION',\r\n        id: props.id\r\n      });\r\n    }, 601);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleStartTimer();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (progress === 100) {\r\n      handleClose();\r\n    }\r\n  }, [progress]);\r\n\r\n  return (\r\n    <div\r\n      onMouseEnter={handlePauseTimer}\r\n      onMouseLeave={handleStartTimer}\r\n      className={`notification ${\r\n        close ? 'notification_closing' : ''\r\n      } bg-black p-2 shadow-lg relative max-w-md inline-flex items-center rounded-md text-white overflow-hidden font-medium text-xs`}\r\n    >\r\n      <span className='overflow-ellipsis overflow-hidden whitespace-nowrap'>\r\n        {props.message}\r\n      </span>\r\n      <button className='ml-2' onClick={handleClose}>\r\n        <svg\r\n          xmlns='http://www.w3.org/2000/svg'\r\n          className='h-4 w-4'\r\n          viewBox='0 0 20 20'\r\n          fill='currentColor'\r\n        >\r\n          <path\r\n            fillRule='evenodd'\r\n            d='M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z'\r\n            clipRule='evenodd'\r\n          />\r\n        </svg>\r\n      </button>\r\n      <div\r\n        style={{ width: `${progress}%` }}\r\n        className='absolute h-0.5 bg-white left-0 bottom-0'\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nNotifications.Item = Notification;\r\n\r\nexport { Notifications, NotificationsContext };\r\n","const getFilter = (method = 'luminance', r, g, b) => {\r\n  for (let i = 0; i < methods.length; i++) {\r\n    if (methods[i].value === method) {\r\n      return methods[i].algorithm(r, g, b);\r\n    }\r\n  }\r\n\r\n  return 0.21 * r + 0.72 * g + 0.07 * b;\r\n};\r\n\r\nconst getSymbol = (\r\n  alphabet = '$@B%8&WM#*oahkbdpqwmZO0QLCJUYXzcvunxrjft/|()1{}[]?-_+~<>i!lI;:,\"^`\\'. ',\r\n  filtered\r\n) => {\r\n  return alphabet[Math.ceil(((alphabet.length - 1) * filtered) / 255)];\r\n};\r\n\r\nconst getBrailleSymbol = (dots) => {\r\n  let number = 0;\r\n  let result = 0;\r\n\r\n  const octets = [1, 10, 2, 20, 4, 40, 100, 200];\r\n\r\n  dots.forEach((index, i) => {\r\n    number += index * octets[i];\r\n  });\r\n\r\n  if (number === 0) {\r\n    return String.fromCharCode(`0x2800`);\r\n  }\r\n\r\n  number = number.toString(10);\r\n\r\n  for (let i = 0; i < number.length; i++) {\r\n    result += number[i] * 8 ** (number.length - 1 - i);\r\n  }\r\n\r\n  return String.fromCharCode(0x2800 + parseInt(result.toString(16), 16));\r\n};\r\n\r\nconst getPixels = (img, width = null, height = null) => {\r\n  const canvas = document.createElement('canvas');\r\n\r\n  canvas.width = parseInt(width) || img.width;\r\n  canvas.height = parseInt(height) || img.height;\r\n\r\n  const ctx = canvas.getContext('2d');\r\n\r\n  ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n\r\n  return ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n};\r\n\r\nconst getBraille = (params) => {\r\n  const { img, imgWidth, imgHeight, method, optimizeA, optimizeRGB } = params;\r\n\r\n  let result = '';\r\n\r\n  const { width, height, data } = getPixels(img, imgWidth, imgHeight);\r\n\r\n  for (let y = 0; y < height; y += 4) {\r\n    for (let x = 0; x < width; x += 2) {\r\n      let index = 0;\r\n      const dots = [0, 0, 0, 0, 0, 0, 0, 0];\r\n      for (let i = 0; i < 4; i++) {\r\n        for (let j = 0; j < 2; j++) {\r\n          const pos = ((y + i) * width + x + j) * 4;\r\n\r\n          const a = data[pos + 3];\r\n\r\n          if (a >= optimizeA) {\r\n            const r = data[pos];\r\n            const g = data[pos + 1];\r\n            const b = data[pos + 2];\r\n\r\n            const filtered = getFilter(method, r, g, b);\r\n\r\n            if (filtered >= optimizeRGB) {\r\n              dots[index] = 1;\r\n            }\r\n          }\r\n\r\n          index++;\r\n        }\r\n      }\r\n\r\n      result += getBrailleSymbol(dots);\r\n    }\r\n\r\n    result += '\\n';\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst getAscii = (params) => {\r\n  let {\r\n    img,\r\n    imgWidth,\r\n    imgHeight,\r\n    cellSize,\r\n    alphabet,\r\n    method,\r\n    optimizeA,\r\n    optimizeRGB\r\n  } = params;\r\n\r\n  cellSize = parseInt(cellSize);\r\n\r\n  if (!cellSize) {\r\n    cellSize = 1;\r\n  }\r\n\r\n  let result = '';\r\n\r\n  const { width, height, data } = getPixels(img, imgWidth, imgHeight);\r\n\r\n  for (let y = 0; y < height; y += parseInt(cellSize)) {\r\n    for (let x = 0; x < width; x += parseInt(cellSize)) {\r\n      const pos = (y * width + x) * 4;\r\n\r\n      const a = data[pos + 3];\r\n\r\n      if (a >= optimizeA) {\r\n        const r = data[pos];\r\n        const g = data[pos + 1];\r\n        const b = data[pos + 2];\r\n\r\n        if (r + g + b >= optimizeRGB) {\r\n          const symbol = getSymbol(alphabet, getFilter(method, r, g, b));\r\n\r\n          result += symbol;\r\n        }\r\n      }\r\n    }\r\n\r\n    result += '\\n';\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst getConversion = (params) => {\r\n  const { mode } = params;\r\n\r\n  for (let i = 0; i < modes.length; i++) {\r\n    if (modes[i].value === mode) {\r\n      return modes[i].algorithm(params);\r\n    }\r\n  }\r\n\r\n  return '';\r\n};\r\n\r\nconst methods = [\r\n  {\r\n    value: 'luminance',\r\n    name: 'Яркость',\r\n    algorithm: (r, g, b) => 0.21 * r + 0.72 * g + 0.07 * b\r\n  },\r\n  {\r\n    value: 'average',\r\n    name: 'Среднее',\r\n    algorithm: (r, g, b) => (r + g + b) / 3\r\n  },\r\n  {\r\n    value: 'max',\r\n    name: 'Максимум',\r\n    algorithm: (r, g, b) => Math.max(r, g, b)\r\n  },\r\n  {\r\n    value: 'min',\r\n    name: 'Минимум',\r\n    algorithm: (r, g, b) => Math.min(r, g, b)\r\n  }\r\n];\r\n\r\nconst modes = [\r\n  {\r\n    value: 'ascii',\r\n    name: 'ASCII',\r\n    algorithm: getAscii\r\n  },\r\n  {\r\n    value: 'braille',\r\n    name: 'Брайль',\r\n    algorithm: getBraille\r\n  }\r\n];\r\n\r\nexport { getConversion, methods, modes };\r\n","import React, { useContext, useEffect, useState, useRef } from 'react';\r\n\r\nimport { v4 } from 'uuid';\r\n\r\nimport Tabs from '../../components/Tabs/Tabs';\r\n\r\nimport { ImgContext } from '../../context/Context';\r\nimport { NotificationsContext } from '../../components/Notifications/Notifications';\r\n\r\nimport { getConversion, methods, modes } from '../../utils/utils';\r\n\r\nconst Converter = (props) => {\r\n  const resulter = useRef();\r\n  const uploader = useRef();\r\n\r\n  const { img, setImg } = useContext(ImgContext);\r\n  const dispatchNotification = useContext(NotificationsContext);\r\n\r\n  const copyToBuffer = () => {\r\n    navigator.clipboard.writeText(result).then(() => {\r\n      dispatchNotification({\r\n        type: 'ADD_NOTIFICATION',\r\n        payload: {\r\n          id: v4(),\r\n          message: 'Результат успешно скопирован в буфер обмена'\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  const saveAsTXT = () => {\r\n    const a = document.createElement('a');\r\n    const file = new Blob([result], {\r\n      type: 'text/plain;charset=utf-8'\r\n    });\r\n    a.href = URL.createObjectURL(file);\r\n    a.download = 'ASCII-JS-GENERATED-TXT';\r\n    a.click();\r\n    URL.revokeObjectURL(a.href);\r\n    dispatchNotification({\r\n      type: 'ADD_NOTIFICATION',\r\n      payload: {\r\n        id: v4(),\r\n        message: 'Результат успешно сохранен как .txt'\r\n      }\r\n    });\r\n  };\r\n\r\n  const getNewImg = () => {\r\n    uploader.current.click();\r\n  };\r\n\r\n  const [result, setResult] = useState(null);\r\n  const [params, setParams] = useState({\r\n    mode: modes[0].value,\r\n    method: methods[0].value,\r\n    imgWidth: img.width || 1,\r\n    imgHeight: img.height || 1,\r\n    optimizeA: 95,\r\n    optimizeRGB: 25,\r\n    alphabet:\r\n      '$@B%8&WM#*oahkbdpqwmZO0QLCJUYXzcvunxrjft/|()1{}[]?-_+~<>i!lI;:,\"^`. ',\r\n    cellSize: 1\r\n  });\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n  const [converting, setConverting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (img) {\r\n      setResult(\r\n        getConversion({\r\n          img,\r\n          ...params\r\n        })\r\n      );\r\n    }\r\n  }, [img, params]);\r\n\r\n  const getImg = (file) => {\r\n    if (uploading || converting || !file) {\r\n      return;\r\n    }\r\n\r\n    setConverting(true);\r\n\r\n    const reader = new FileReader();\r\n\r\n    reader.readAsDataURL(file);\r\n\r\n    reader.onload = (evt) => {\r\n      const img = new Image();\r\n\r\n      img.src = evt.target.result;\r\n\r\n      img.onload = () => {\r\n        setConverting(false);\r\n        setImg(img);\r\n      };\r\n    };\r\n  };\r\n\r\n  const isSupported = (type) => {\r\n    const supported = ['image/jpeg', 'image/jpg', 'image/png'];\r\n\r\n    return supported.includes(type);\r\n  };\r\n\r\n  const getFile = (files) => {\r\n    if (files.length) {\r\n      const file = files[0];\r\n\r\n      if (isSupported(file.type)) {\r\n        return file;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = (evt) => {\r\n    if (uploading || converting) {\r\n      return;\r\n    }\r\n\r\n    setUploading(true);\r\n\r\n    const files = evt.currentTarget.files;\r\n    const file = getFile(files);\r\n\r\n    setUploading(false);\r\n\r\n    if (file) {\r\n      getImg(file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    result && (\r\n      <>\r\n        <Tabs className='p-4 shadow-lg fixed bottom-4 -translate-x-1/2 left-1/2 flex space-x-6 rounded-md z-30 bg-white sm:flex-col sm:space-y-5 sm:-translate-x-0 sm:inset-auto sm:space-x-0 sm:-translate-y-1/2 sm:left-2 sm:top-1/2 dark:bg-gray-700'>\r\n          <div className='relative'>\r\n            <Tabs.ItemIndicator\r\n              tooltip='Загрузить новое изображение'\r\n              className='grid items-center p-1 text-gray-400 hover:text-gray-700 focus-visible:text-gray-700 dark:hover:text-gray-200 dark:focus-visible:text-gray-200'\r\n              callback={getNewImg}\r\n            >\r\n              <svg\r\n                width='24'\r\n                height='24'\r\n                viewBox='0 0 24 24'\r\n                fill='none'\r\n                xmlns='http://www.w3.org/2000/svg'\r\n              >\r\n                <path\r\n                  d='M16 22H4C2.89543 22 2 21.1046 2 20V8H4V20H16V22ZM20 18H8C6.89543 18 6 17.1046 6 16V4C6 2.89543 6.89543 2 8 2H20C21.1046 2 22 2.89543 22 4V16C22 17.1046 21.1046 18 20 18ZM8 4V16H20V4H8ZM15 14H13V11H10V9H13V6H15V9H18V11H15V14Z'\r\n                  fill='currentColor'\r\n                  className='transition-all'\r\n                />\r\n              </svg>\r\n            </Tabs.ItemIndicator>\r\n          </div>\r\n          <div className='relative'>\r\n            <Tabs.ItemIndicator\r\n              tooltip='Скопировать в буфер обмена'\r\n              className='grid items-center p-1 text-gray-400 hover:text-gray-700 focus-visible:text-gray-700 dark:hover:text-gray-200 dark:focus-visible:text-gray-200'\r\n              callback={copyToBuffer}\r\n            >\r\n              <svg\r\n                width='24'\r\n                height='24'\r\n                viewBox='0 0 24 24'\r\n                fill='none'\r\n                xmlns='http://www.w3.org/2000/svg'\r\n              >\r\n                <path\r\n                  d='M16 22H4C2.89543 22 2 21.1046 2 20V8H4V20H16V22ZM20 18H8C6.89543 18 6 17.1046 6 16V4C6 2.89543 6.89543 2 8 2H20C21.1046 2 22 2.89543 22 4V16C22 17.1046 21.1046 18 20 18ZM8 4V16H20V4H8Z'\r\n                  fill='currentColor'\r\n                  className='transition-all'\r\n                />\r\n              </svg>\r\n            </Tabs.ItemIndicator>\r\n          </div>\r\n          <div className='relative'>\r\n            <Tabs.ItemIndicator\r\n              tooltip='Сохранить как .txt'\r\n              className='grid items-center p-1 text-gray-400 hover:text-gray-700 focus-visible:text-gray-700 dark:hover:text-gray-200 dark:focus-visible:text-gray-200'\r\n              callback={saveAsTXT}\r\n            >\r\n              <svg\r\n                xmlns='http://www.w3.org/2000/svg'\r\n                width='24'\r\n                height='24'\r\n                viewBox='0 0 24 24'\r\n                fill='none'\r\n              >\r\n                <path\r\n                  d='M16 22H4C2.89543 22 2 21.1046 2 20V8H4V20H16V22ZM20 18H8C6.89543 18 6 17.1046 6 16V4C6 2.89543 6.89543 2 8 2H20C21.1046 2 22 2.89543 22 4V16C22 17.1046 21.1046 18 20 18ZM8 4V16H20V4H8Z'\r\n                  fill='currentColor'\r\n                  className='transition-all'\r\n                />\r\n                <path\r\n                  d='M13 6H15V11.5L16.75 9.75L18 11L15.25 13.75L15 14L14 15L13 14L12.75 13.75L10 11L11.25 9.75L13 11.5V6Z'\r\n                  fill='currentColor'\r\n                  className='transition-all'\r\n                />\r\n              </svg>\r\n            </Tabs.ItemIndicator>\r\n          </div>\r\n          <div className='relative'>\r\n            <Tabs.ItemIndicator\r\n              tooltip='Параметры конвертера'\r\n              className='grid items-center p-1 text-gray-400 hover:text-gray-700 focus-visible:text-gray-700 dark:hover:text-gray-200 dark:focus-visible:text-gray-200'\r\n              item='01'\r\n            >\r\n              <svg\r\n                width='24'\r\n                height='24'\r\n                viewBox='0 0 24 24'\r\n                fill='none'\r\n                xmlns='http://www.w3.org/2000/svg'\r\n              >\r\n                <path\r\n                  d='M12 23L2.5 17.5V6.5L12 1L21.5 6.5V17.5L12 23ZM12 3.312L4.5 7.653V16.347L12 20.689L19.5 16.347V7.653L12 3.311V3.312ZM12 16C10.9395 15.997 9.92294 15.5759 9.171 14.828C8.02724 13.6839 7.68525 11.9635 8.30448 10.4689C8.92371 8.97436 10.3822 8 12 8C13.0603 8.00284 14.0765 8.42402 14.828 9.172C16.3895 10.734 16.3895 13.266 14.828 14.828C14.0764 15.5757 13.0602 15.9968 12 16ZM12 10C11.0458 9.9998 10.2244 10.6736 10.0381 11.6094C9.85175 12.5452 10.3524 13.4823 11.2339 13.8476C12.1153 14.2129 13.1321 13.9047 13.6623 13.1114C14.1926 12.3182 14.0886 11.2608 13.414 10.586C13.0398 10.2098 12.5307 9.99879 12 10Z'\r\n                  fill='currentColor'\r\n                  className='transition-all'\r\n                ></path>\r\n              </svg>\r\n            </Tabs.ItemIndicator>\r\n            <Tabs.Item\r\n              className='bg-white fixed p-2 z-40 shadow-lg rounded-md bottom-full left-0 sm:absolute sm:inset-auto sm:left-full sm:top-0 dark:bg-gray-700 dark:text-white'\r\n              item='01'\r\n            >\r\n              <form className='flex p-2 flex-col max-h-24 space-y-2 overflow-scroll sm:max-w-sm sm:flex-row sm:space-y-0 sm:space-x-2 md:max-w-lg lg:max-w-4xl'>\r\n                <label className='flex items-center space-x-2'>\r\n                  <span className='whitespace-nowrap font-medium'>Режим:</span>\r\n                  <select\r\n                    name='mode'\r\n                    value={params.mode}\r\n                    onChange={(evt) => {\r\n                      setParams((prev) => ({\r\n                        ...prev,\r\n                        [evt.target.name]: evt.target.value\r\n                      }));\r\n                    }}\r\n                    className='border-1 rounded p-1 dark:bg-gray-800 dark:border-0'\r\n                  >\r\n                    {modes.map((mode) => (\r\n                      <option key={mode.value} value={mode.value}>\r\n                        {mode.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </label>\r\n                <label className='flex items-center space-x-2'>\r\n                  <span className='whitespace-nowrap font-medium'>\r\n                    Алфавит:\r\n                  </span>\r\n                  <input\r\n                    type='text'\r\n                    value={params.alphabet}\r\n                    className='w-44 border-1 rounded p-1 dark:bg-gray-800 dark:border-0'\r\n                    minLength='1'\r\n                    name='alphabet'\r\n                    onChange={(evt) => {\r\n                      setParams((prev) => ({\r\n                        ...prev,\r\n                        [evt.target.name]: evt.target.value + ' '\r\n                      }));\r\n                    }}\r\n                  />\r\n                </label>\r\n                <label className='flex items-center space-x-2'>\r\n                  <span className='whitespace-nowrap font-medium'>\r\n                    Размер ячейки:\r\n                  </span>\r\n                  <input\r\n                    type='number'\r\n                    value={params.cellSize}\r\n                    name='cellSize'\r\n                    className='w-16 border-1 rounded p-1 dark:bg-gray-800 dark:border-0'\r\n                    min='1'\r\n                    onChange={(evt) => {\r\n                      setParams((prev) => ({\r\n                        ...prev,\r\n                        [evt.target.name]: evt.target.value\r\n                      }));\r\n                    }}\r\n                  />\r\n                </label>\r\n              </form>\r\n            </Tabs.Item>\r\n          </div>\r\n          <div className='relative'>\r\n            <Tabs.ItemIndicator\r\n              tooltip='Параметры конвертации'\r\n              className='grid items-center p-1 text-gray-400 hover:text-gray-700 focus-visible:text-gray-700 dark:hover:text-gray-200 dark:focus-visible:text-gray-200'\r\n              item='02'\r\n            >\r\n              <svg\r\n                width='24'\r\n                height='24'\r\n                viewBox='0 0 24 24'\r\n                fill='none'\r\n                xmlns='http://www.w3.org/2000/svg'\r\n              >\r\n                <path\r\n                  d='M7 21H5V19H2V17H5V15H7V21ZM22 19H9V17H22V19ZM17 15H15V13H2V11H15V9.012H17V15ZM22 13H19V11H22V13ZM11 9H9V7H2V5H9V3H11V9ZM22 7H13V5H22V7Z'\r\n                  fill='currentColor'\r\n                  className='transition-all'\r\n                ></path>\r\n              </svg>\r\n            </Tabs.ItemIndicator>\r\n            <Tabs.Item\r\n              className='bg-white fixed p-2 z-40 shadow-lg rounded-md bottom-full left-0 sm:absolute sm:inset-auto sm:left-full sm:top-0 dark:bg-gray-700 dark:text-white'\r\n              item='02'\r\n            >\r\n              <form className='flex p-2 flex-col max-h-24 space-y-2 overflow-scroll sm:max-w-sm sm:flex-row sm:space-y-0 sm:space-x-2 md:max-w-lg lg:max-w-4xl'>\r\n                <label className='flex items-center space-x-2'>\r\n                  <span className='whitespace-nowrap font-medium'>Метод:</span>\r\n                  <select\r\n                    name='method'\r\n                    value={params.method}\r\n                    onChange={(evt) => {\r\n                      setParams((prev) => ({\r\n                        ...prev,\r\n                        [evt.target.name]: evt.target.value\r\n                      }));\r\n                    }}\r\n                    className='border-1 rounded p-1 dark:bg-gray-800 dark:border-0'\r\n                  >\r\n                    {methods.map((method) => (\r\n                      <option key={method.value} value={method.value}>\r\n                        {method.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </label>\r\n                <label className='flex items-center space-x-2'>\r\n                  <span className='whitespace-nowrap font-medium'>Ширина:</span>\r\n                  <input\r\n                    type='number'\r\n                    value={params.imgWidth}\r\n                    name='imgWidth'\r\n                    className='w-16 border-1 rounded p-1 dark:bg-gray-800 dark:border-0'\r\n                    min='1'\r\n                    onChange={(evt) => {\r\n                      setParams((prev) => ({\r\n                        ...prev,\r\n                        [evt.target.name]: evt.target.value\r\n                      }));\r\n                    }}\r\n                  />\r\n                </label>\r\n                <label className='flex items-center space-x-2'>\r\n                  <span className='whitespace-nowrap font-medium'>Высота:</span>\r\n                  <input\r\n                    type='number'\r\n                    value={params.imgHeight}\r\n                    name='imgHeight'\r\n                    className='w-16 border-1 rounded p-1 dark:bg-gray-800 dark:border-0'\r\n                    min='1'\r\n                    onChange={(evt) => {\r\n                      setParams((prev) => ({\r\n                        ...prev,\r\n                        [evt.target.name]: evt.target.value\r\n                      }));\r\n                    }}\r\n                  />\r\n                </label>\r\n                <label className='flex items-center space-x-2'>\r\n                  <span className='whitespace-nowrap font-medium'>\r\n                    Допуск A:\r\n                  </span>\r\n                  <input\r\n                    type='number'\r\n                    value={params.optimizeA}\r\n                    className='w-16 border-1 rounded p-1 dark:bg-gray-800 dark:border-0'\r\n                    name='optimizeA'\r\n                    min='1'\r\n                    max='254'\r\n                    onChange={(evt) => {\r\n                      setParams((prev) => ({\r\n                        ...prev,\r\n                        [evt.target.name]: evt.target.value\r\n                      }));\r\n                    }}\r\n                  />\r\n                </label>\r\n                <label className='flex items-center space-x-2'>\r\n                  <span className='whitespace-nowrap font-medium'>\r\n                    Допуск RGB:\r\n                  </span>\r\n                  <input\r\n                    type='number'\r\n                    value={params.optimizeRGB}\r\n                    name='optimizeRGB'\r\n                    className='w-16 border-1 rounded p-1 dark:bg-gray-800 dark:border-0'\r\n                    min='1'\r\n                    max='254'\r\n                    onChange={(evt) => {\r\n                      setParams((prev) => ({\r\n                        ...prev,\r\n                        [evt.target.name]: evt.target.value\r\n                      }));\r\n                    }}\r\n                  />\r\n                </label>\r\n              </form>\r\n            </Tabs.Item>\r\n          </div>\r\n        </Tabs>\r\n        <form>\r\n          <textarea\r\n            style={{ fontFamily: 'monospace' }}\r\n            readOnly\r\n            ref={resulter}\r\n            value={result}\r\n            className='resulter w-screen h-screen fixed left-0 top-0 bottom-0 right-0 resize-none block leading-none text-xs text-center whitespace-pre dark:bg-gray-800 dark:text-white'\r\n          ></textarea>\r\n          <input\r\n            onChange={handleChange}\r\n            ref={uploader}\r\n            className='sr-only'\r\n            type='file'\r\n            accept='.jpg, .jpeg, .png'\r\n          />\r\n        </form>\r\n      </>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Converter;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\n\r\nimport { ImgContext } from '../../context/Context';\r\n\r\nconst Dropper = () => {\r\n  const { setImg } = useContext(ImgContext);\r\n\r\n  let draggingCounter = 0;\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n  const [converting, setConverting] = useState(false);\r\n  const [dragging, setDragging] = useState(false);\r\n\r\n  const isSupported = (type) => {\r\n    const supported = ['image/jpeg', 'image/jpg', 'image/png'];\r\n\r\n    return supported.includes(type);\r\n  };\r\n\r\n  const getFile = (files) => {\r\n    if (files.length) {\r\n      const file = files[0];\r\n\r\n      if (isSupported(file.type)) {\r\n        return file;\r\n      }\r\n    }\r\n  };\r\n\r\n  const getImg = (file) => {\r\n    if (uploading || converting || !file) {\r\n      return;\r\n    }\r\n\r\n    setConverting(true);\r\n\r\n    const reader = new FileReader();\r\n\r\n    reader.readAsDataURL(file);\r\n\r\n    reader.onload = (evt) => {\r\n      const img = new Image();\r\n\r\n      img.src = evt.target.result;\r\n\r\n      img.onload = () => {\r\n        setConverting(false);\r\n        setImg(img);\r\n      };\r\n    };\r\n  };\r\n\r\n  const handlePropagation = (evt) => {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n\r\n    if (uploading || converting) {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleDrag = (evt) => {\r\n    handlePropagation(evt);\r\n  };\r\n\r\n  const handleDragIn = (evt) => {\r\n    handlePropagation(evt);\r\n\r\n    draggingCounter++;\r\n\r\n    if (evt.dataTransfer.items && evt.dataTransfer.items.length > 0) {\r\n      setDragging(true);\r\n    }\r\n  };\r\n\r\n  const handleDragOut = (evt) => {\r\n    handlePropagation(evt);\r\n\r\n    draggingCounter--;\r\n\r\n    if (draggingCounter === 0) {\r\n      setDragging(false);\r\n    }\r\n  };\r\n\r\n  const handleDrop = (evt) => {\r\n    handlePropagation(evt);\r\n\r\n    setDragging(false);\r\n    draggingCounter = 0;\r\n\r\n    if (evt.dataTransfer.files && evt.dataTransfer.files.length > 0) {\r\n      setUploading(true);\r\n\r\n      const files = evt.dataTransfer.files;\r\n      const file = getFile(files);\r\n\r\n      setUploading(false);\r\n\r\n      if (file) {\r\n        getImg(file);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('dragenter', handleDragIn);\r\n    document.addEventListener('dragleave', handleDragOut);\r\n    document.addEventListener('dragover', handleDrag);\r\n    document.addEventListener('drop', handleDrop);\r\n  }, []);\r\n\r\n  return (\r\n    dragging && (\r\n      <div className='bg-white w-screen h-screen fixed left-0 top-0 bottom-0 right-0 p-4 z-[1000] opacity-95 dark:bg-gray-700'>\r\n        <div className='w-full h-full border-2 text-gray-300 border-gray-300 border-dashed rounded-md grid place-content-center pointer-events-none'>\r\n          <svg\r\n            xmlns='http://www.w3.org/2000/svg'\r\n            className='h-12 w-12 pointer-events-none animate-bounce'\r\n            fill='none'\r\n            viewBox='0 0 24 24'\r\n            stroke='currentColor'\r\n          >\r\n            <path\r\n              strokeLinecap='round'\r\n              strokeLinejoin='round'\r\n              strokeWidth='2'\r\n              className='pointer-events-none'\r\n              d='M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4'\r\n            />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Dropper;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst ThemeSwitcher = (props) => {\r\n  const [theme, setTheme] = useState('light');\r\n\r\n  const changeTheme = () => {\r\n    if (theme === 'light') {\r\n      document.documentElement.classList.add('dark');\r\n      localStorage.theme = 'dark';\r\n      setTheme('dark');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n      localStorage.theme = 'light';\r\n      setTheme('light');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      localStorage.theme === 'dark' ||\r\n      (!('theme' in localStorage) &&\r\n        window.matchMedia('(prefers-color-scheme: dark)').matches)\r\n    ) {\r\n      document.documentElement.classList.add('dark');\r\n      localStorage.theme = 'dark';\r\n      setTheme('dark');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n      localStorage.theme = 'light';\r\n      setTheme('light');\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <button\r\n      type='button'\r\n      onClick={changeTheme}\r\n      className='grid h-11 w-11 overflow-hidden items-center fixed top-3 left-1/2 -translate-x-1/2 z-[500] rounded-md p-3 shadow-lg bg-white dark:bg-gray-700 text-yellow-500 transition-all'\r\n    >\r\n      <svg\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        className={`h-6 w-6 transition-all absolute left-1/2 -translate-x-1/2 -translate-y-1/2 top-1/2 ${\r\n          theme === 'dark' ? '-mt-8' : ''\r\n        }`}\r\n        fill='none'\r\n        viewBox='0 0 24 24'\r\n        stroke='currentColor'\r\n      >\r\n        <path\r\n          strokeLinecap='round'\r\n          strokeLinejoin='round'\r\n          strokeWidth='2'\r\n          className='transition-all'\r\n          d='M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z'\r\n        />\r\n      </svg>\r\n      <svg\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        className={`h-6 w-6 transition-all absolute left-1/2 -translate-x-1/2 -translate-y-1/2 top-1/2 ${\r\n          theme === 'light' ? 'mt-8' : ''\r\n        }`}\r\n        fill='none'\r\n        viewBox='0 0 24 24'\r\n        stroke='currentColor'\r\n      >\r\n        <path\r\n          strokeLinecap='round'\r\n          strokeLinejoin='round'\r\n          strokeWidth='2'\r\n          className='transition-all'\r\n          d='M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z'\r\n        />\r\n      </svg>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ThemeSwitcher;\r\n","import React, { useContext } from 'react';\r\n\r\nimport { ImgContext } from '../../context/Context';\r\n\r\nimport Uploader from '../uploader/Uploader';\r\nimport Converter from '../converter/Converter';\r\nimport Dropper from '../../components/Dropper/Dropper';\r\n\r\nimport { Notifications } from '../../components/Notifications/Notifications';\r\nimport ThemeSwitcher from '../../components/ThemeSwitcher/ThemeSwitcher';\r\n\r\nconst Main = () => {\r\n  const { img } = useContext(ImgContext);\r\n\r\n  return (\r\n    <>\r\n      <Notifications>\r\n        <Dropper></Dropper>\r\n        {img ? <Converter></Converter> : <Uploader></Uploader>}\r\n        <ThemeSwitcher />\r\n      </Notifications>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\n\r\nimport Main from './pages/main/Main';\r\n\r\nimport { ImgProvider } from './context/Context';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ImgProvider>\r\n      <Main></Main>\r\n    </ImgProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}